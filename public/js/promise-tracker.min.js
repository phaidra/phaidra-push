/*
 * promise-tracker - v2.0.0-beta2 - 2014-01-27
 * http://github.com/ajoslin/angular-promise-tracker
 * Created by Andy Joslin; Licensed under Public Domain
 */

(function() {
function TrackerHttpInterceptor(a,b){return{request:function(c){return c.tracker&&(angular.isArray(c.tracker)||(c.tracker=[c.tracker]),c.$promiseTrackerDeferred=c.$promiseTrackerDeferred||[],angular.forEach(c.tracker,function(a){var d=b(a).createPromise(c);c.$promiseTrackerDeferred.push(d)})),a.when(c)},response:function(b){return b.config&&b.config.$promiseTrackerDeferred&&angular.forEach(b.config.$promiseTrackerDeferred,function(a){a.resolve(b)}),a.when(b)},responseError:function(b){return b.config&&b.config.$promiseTrackerDeferred&&angular.forEach(b.config.$promiseTrackerDeferred,function(a){a.reject(b)}),a.reject(b)}}}angular.module("ajoslin.promise-tracker",[]),angular.module("ajoslin.promise-tracker").config(["$httpProvider",function(a){a.interceptors.push(TrackerHttpInterceptor)}]),TrackerHttpInterceptor.$inject=["$q","promiseTracker"],angular.module("ajoslin.promise-tracker").provider("promiseTracker",function(){var a={};this.$get=["$q","$timeout",function(b,c){function d(a){a&&c.cancel(a)}function e(b){if(!a[b])throw new Error('Tracker with id "'+b+'" does not exist! Use promiseTracker.register()');return a[b]}function f(a){a=a||{};var e,f,g,h=[],i=this,j=a.minDuration,k=a.maxDuration,l=a.activationDelay;i._destroy=function(){e=d(e),f=d(f),g=d(g),i.cancel()},i.active=function(){return g?!1:h.length>0},i.cancel=function(){for(var a=h.length-1;a>=0;a--)h[a].resolve()},i.createPromise=function(){function a(){j&&(e=c(angular.noop,j)),k&&(f=c(m.resolve,k))}function i(){return function(){(e||b.when()).then(function(){var a=h.indexOf(m);h.splice(a,1),0===h.length&&(f=d(f),g=d(g))})}}var m=b.defer();return h.push(m),1===h.length&&(l?g=c(function(){g=d(g),a()},l):a()),m.promise.then(i(!1),i(!0)),m},i.addPromise=function(a){var c=a&&(a.then||a.$then||a.$promise&&a.$promise.then);if(!c)throw new Error("promiseTracker#addPromise expects a promise object!");var d=i.createPromise();return c(function(a){return d.resolve(a),a},function(a){return d.reject(a),b.reject(a)}),d}}return e.register=function(b,c){if(a[b])throw new Error('Tracker with id "'+b+'" already exists!');return a[b]=new f(c),a[b]},e.deregister=function(b){a[b]&&(a[b]._destroy(),delete a[b])},e}]});
}());